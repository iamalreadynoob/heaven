package libraries;

import general.AutomatedVars;
import general.Result;

import java.util.ArrayList;

public class GuiHandling
{

    public static void handle(Result result, ArrayList<String> pieces, AutomatedVars automatedVars)
    {
        if (pieces.get(3).equals("launch")) launch(result, pieces, automatedVars);
    }

    private static void launch(Result result, ArrayList<String> pieces, AutomatedVars automatedVars)
    {
        String objTypes = automatedVars.next();
        String objNames = automatedVars.next();
        String loc = automatedVars.next();
        String frame = automatedVars.next();
        String types = automatedVars.next();
        String names = automatedVars.next();
        String dir = automatedVars.next();
        String isCreated = automatedVars.next();
        String iScenes = automatedVars.next();
        String writer = automatedVars.next();
        String name = automatedVars.next();
        String screen = automatedVars.next();
        String createNew = automatedVars.next();
        String f = automatedVars.next();
        String add = automatedVars.next();
        String positions = automatedVars.next();
        String e = automatedVars.next();
        String appText = automatedVars.next();
        String theme = automatedVars.next();
        String visibility = automatedVars.next();
        String truth = automatedVars.next();
        String buttons = automatedVars.next();
        String i = automatedVars.next();
        String j = automatedVars.next();
        String id = automatedVars.next();
        String varTypes = pieces.get(4);
        String varNames = pieces.get(5);
        String varFrames = pieces.get(6);
        String frameNames = pieces.get(7);

        ArrayList<String> lines = new ArrayList<>();

        lines.add("ArrayList<ArrayList<String>> " + objTypes + " = new ArrayList<>();");
        lines.add("ArrayList<ArrayList<String>> " + objNames + " = new ArrayList<>();");
        lines.add("int " + loc + " = 0;");
        lines.add("int " + frame + " = 0;");
        lines.add("while (" + frame + " <= " + varFrames + ".get(" + varFrames + ".size() - 1))");
        lines.add("{");
        lines.add("ArrayList<String> " + types + " = new ArrayList<>();");
        lines.add("ArrayList<String> " + names + " = new ArrayList<>();");
        lines.add("while (" + loc + " < " + varTypes + ".size() && " + frame + " == " + varFrames + ".get(" + loc + "))");
        lines.add("{");
        lines.add(types + ".add(" + varTypes + ".get(" + loc + "));");
        lines.add(names + ".add(" + varNames + ".get(" + loc + "));");
        lines.add(loc + "++;");
        lines.add("}");
        lines.add(objTypes + ".add(" + types + ");");
        lines.add(objNames + ".add(" + names + ");");
        lines.add(frame + "++;");
        lines.add("}");
        lines.add("File " + dir + " = new File(\"gui\");");
        lines.add("boolean " + isCreated + " = " + dir + ".mkdir();");
        lines.add("File " + iScenes + " = new File(\"gui/IScenes.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter " + writer + " = new FileWriter(" + iScenes + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"public interface IScenes\\n\" +");
        lines.add("\"{\\n\\n\");");
        lines.add("for (String " + name + ": " + frameNames + ") " + writer + ".write(\"\\tvoid \" + " + name + " + \"();\\n\");");
        lines.add(writer + ".write(\"\\n}\\n\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + ") {" + e + ".printStackTrace();}");
        lines.add("File " + screen + " = new File(\"gui/Screen.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter " + writer + " = new FileWriter(" + screen + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"import javax.swing.*;\\n\" +");
        lines.add("\"import static javax.swing.WindowConstants.EXIT_ON_CLOSE;\\n\\n\" +");
        lines.add("\"public class Screen extends JFrame\\n\" +");
        lines.add("\"{\\n\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + frameNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add(writer + ".write(\"\\t//\" + " + frameNames + ".get(" + i + ") + \" screen\\n\");");
        lines.add("for (int " + j + " = 0; " + j + " < " + objNames + ".get(" + i + ").size(); " + j + "++)");
        lines.add("{");
        lines.add("if (" + j + " == 0) " + writer + ".write(\"\\tprotected static \" + " + objTypes + ".get(" + i + ").get(" + j + ") + \" \" + " + objNames + ".get(" + i + ").get(" + j + "));");
        lines.add("else if (" + objTypes + ".get(" + i + ").get(" + j + ").equals(" + objTypes + ".get(" + i + ").get(" + j + "-1))) " + writer + ".write(\", \" + " + objNames + ".get(" + i + ").get(" + j + "));");
        lines.add("else " + writer + ".write(\";\\n\\tprotected static \" + " + objTypes + ".get(" + i + ").get(" + j + ") +  \" \" + " + objNames + ".get(" + i + ").get(" + j + "));");
        lines.add("}");
        lines.add(writer + ".write(\";\\n\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"\\tpublic Screen()\\n\" +");
        lines.add("\"\\t{\\n\" +");
        lines.add("\"\\t\\tthis.setLayout(null);\\n\" +");
        lines.add("\"\\t\\tthis.setTitle(\\\"fill-there\\\");\\n\" +");
        lines.add("\"\\t\\tthis.setSize(100, 100);\\n\\n\" +");
        lines.add("\"\\t\\tnew CreateNew();\\n\" +");
        lines.add("\"\\t\\tnew Add(this);\\n\" +");
        lines.add("\"\\t\\tnew Visibility(false).launch();\\n\" +");
        lines.add("\"\\t\\tnew AppText();\\n\" +");
        lines.add("\"\\t\\tnew Theme(this);\\n\" +");
        lines.add("\"\\t\\tnew Positions();\\n\" +");
        lines.add("\"\\t\\tnew Buttons(this);\\n\\n\" +");
        lines.add("\"\\t\\tthis.setResizable(false);\\n\" +");;
        lines.add("\"\\t\\tthis.setDefaultCloseOperation(EXIT_ON_CLOSE);\\n\" +");
        lines.add("\"\\t\\tthis.setVisible(true);\\n\" +");
        lines.add("\"\\t}\\n\\n\" +");
        lines.add("\"}\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + "){" + e + ".printStackTrace();}");
        lines.add("File " + createNew + " = new File(\"gui/CreateNew.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter "  + writer + " = new FileWriter(" + createNew + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"import javax.swing.*;\\n\\n\" +");
        lines.add("\"public class CreateNew implements IScenes\\n\" +");
        lines.add("\"{\\n\" +");
        lines.add("\"\\tprotected CreateNew()\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("for (String " + f + ": " + frameNames +") " + writer + ".write( \"\\t\\t\" + " + f + " + \"();\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + frameNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add(writer + ".write(\"\\t@Override\\n\" +");
        lines.add("\"\\tpublic void \" + " + frameNames + ".get(" + i + ") + \"()\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("for (int " + j + " = 0; " + j + " < " + objNames + ".get(" + i + ").size(); " + j + "++)");
        lines.add(writer + ".write(\"\\t\\tScreen.\" + " + objNames + ".get(" + i + ").get(" + j + ") + \" = new \" + " + objTypes + ".get(" + i + ").get(" + j + ") + \"();\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"}\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + "){" + e + ".printStackTrace();}");
        lines.add("File " + add + " = new File(\"gui/Add.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter " + writer + " = new FileWriter(" + add + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"import javax.swing.*;\\n\\n\" +");
        lines.add("\"public class Add implements IScenes\\n\" +");
        lines.add("\"{\\n\" +");
        lines.add("\"\\tprivate JFrame frame;\\n\\n\" +");
        lines.add("\"\\tprotected Add(JFrame frame)\\n\" +");
        lines.add("\"\\t{\\n\" +");
        lines.add("\"\\t\\tthis.frame = frame;\\n\");");
        lines.add("for (String " + f + ": " + frameNames + ") " + writer + ".write( \"\\t\\t\" + " + f + " + \"();\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + frameNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add(writer + ".write(\"\\t@Override\\n\" +");
        lines.add("\"\\tpublic void \" + " + frameNames + ".get(" + i + ") + \"()\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("for (int " + j + " = 0; " + j + " < " + objNames + ".get(" + i + ").size(); " + j + "++)");
        lines.add(writer + ".write(\"\\t\\tframe.add(Screen.\" + " + objNames + ".get(" + i + ").get(" + j + ") + \");\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"}\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + "){" + e + ".printStackTrace();}");
        lines.add("File " + positions + " = new File(\"gui/Positions.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter " + writer + " = new FileWriter(" + positions + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"import javax.swing.*;\\n\\n\" +");
        lines.add("\"public class Positions implements IScenes\\n\" +");
        lines.add("\"{\\n\" +");
        lines.add("\"\\tprotected Positions()\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("for (String " + f + ": " + frameNames + ") " + writer + ".write( \"\\t\\t\" + " + f + " + \"();\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + frameNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add(writer + ".write(\"\\t@Override\\n\" +");
        lines.add("\"\\tpublic void \" + " + frameNames + ".get(" + i + ") + \"()\\n\" +");
        lines.add("\"\\t{\\n\\n\\n\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"}\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + "){" + e + ".printStackTrace();}");
        lines.add("File " + appText + " = new File(\"gui/AppText.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter " + writer + " = new FileWriter(" + appText + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"import javax.swing.*;\\n\\n\" +");
        lines.add("\"public class AppText implements IScenes\\n\" +");
        lines.add("\"{\\n\" +");
        lines.add("\"\\tprotected AppText()\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("for (String " + f + ": " + frameNames + ") " + writer + ".write( \"\\t\\t\" + " + f + " + \"();\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + frameNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add(writer + ".write(\"\\t@Override\\n\" +");
        lines.add("\"\\tpublic void \" + " + frameNames + ".get(" + i + ") + \"()\\n\" +");
        lines.add("\"\\t{\\n\\n\\n\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"}\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + "){" + e + ".printStackTrace();}");
        lines.add("File " + theme + " = new File(\"gui/Theme.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter " + writer + " = new FileWriter(" + theme + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"import javax.swing.*;\\n\\n\" +");
        lines.add("\"public class Theme implements IScenes\\n\" +");
        lines.add("\"{\\n\\n\" +");
        lines.add("\"\\t//TODO: make your own color objects\\n\\n\" +");
        lines.add("\"\\tprotected Theme(JFrame frame)\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("for (String " + f + ": " + frameNames + ") " + writer + ".write( \"\\t\\t\" + " + f + " + \"();\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + frameNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add(writer + ".write(\"\\t@Override\\n\" +");
        lines.add("\"\\tpublic void \" + " + frameNames + ".get(" + i + ") + \"()\\n\" +");
        lines.add("\"\\t{\\n\\n\\n\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"\\tprivate void colorize(String code)\\n\" +");
        lines.add("\"\\t{\\n\\n\\n\\n\" +");
        lines.add("\"\\t}\\n\\n\" +");
        lines.add("\"}\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + "){" + e + ".printStackTrace();}");
        lines.add("File " + visibility + " = new File(\"gui/Visibility.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter " + writer + " = new FileWriter(" + visibility + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"import javax.swing.*;\\n\\n\" +");
        lines.add("\"public class Visibility implements IScenes\\n\" +");
        lines.add("\"{\\n\" +");
        lines.add("\"\\tprivate boolean isVisible;\\n\\n\" +");
        lines.add("\"\\tprotected Visibility(boolean isVisible)\\n\" +");
        lines.add("\"\\t{\\n\" +");
        lines.add("\"\\t\\tthis.isVisible = isVisible;\\n\");");
        lines.add("for (String " + f + ": " + frameNames + ") " + writer + ".write( \"\\t\\t\" + " + f + " + \"();\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + frameNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add(writer + ".write(\"\\t@Override\\n\" +");
        lines.add("\"\\tpublic void \" + " + frameNames + ".get("  + i + ") + \"()\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("for (int " + j + " = 0; " + j + " < " + objNames + ".get(" + i + ").size(); " + j + "++)");
        lines.add(writer + ".write(\"\\t\\tScreen.\" + " + objNames + ".get(" + i + ").get(" + j + ") + \".setVisible(isVisible);\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"\\tprotected void launch()\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("int " + id + " = " + frameNames + ".indexOf(\"main\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + varNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add("String " + truth + " = \"false\";");
        lines.add(writer + ".write(\"\\t\\tScreen.\" +  " + varNames + ".get(" + i + ") + \".setVisible(\" + " + truth + " + \");\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"\\t}\\n\\n\" +");
        lines.add("\"}\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + "){" + e + ".printStackTrace();}");
        lines.add("File " + buttons + " = new File(\"gui/Buttons.java\");");
        lines.add("try");
        lines.add("{");
        lines.add("FileWriter " + writer + " = new FileWriter(" + buttons + ");");
        lines.add(writer + ".write(\"package gui;\\n\\n\" +");
        lines.add("\"import java.awt.event.ActionEvent;\\n\" +");
        lines.add("\"import java.awt.event.ActionListener;\\n\" +");
        lines.add("\"import javax.swing.*;\\n\\n\" +");
        lines.add("\"public class Buttons implements IScenes\\n\" +");
        lines.add("\"{\\n\" +");
        lines.add("\"\\tprivate JFrame frame;\\n\\n\" +");
        lines.add("\"\\tprotected Buttons(JFrame frame)\\n\" +");
        lines.add("\"\\t{\\n\" +");
        lines.add("\"\\t\\tthis.frame = frame;\\n\");");
        lines.add("for (String " + f + ": " + frameNames + ") " + writer + ".write( \"\\t\\t\" + " + f + " + \"();\\n\");");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("for (int " + i + " = 0; " + i + " < " + frameNames + ".size(); " + i + "++)");
        lines.add("{");
        lines.add(writer + ".write(\"\\t@Override\\n\" +");
        lines.add("\"\\tpublic void \" + " + frameNames + ".get(" + i + ") + \"()\\n\" +");
        lines.add("\"\\t{\\n\");");
        lines.add("for (int " + j + " = 0; " + j + " < " + objNames + ".get(" + i + ").size(); " + j + "++)");
        lines.add("{");
        lines.add("if (" + objTypes + ".get(" + i + ").get(" + j + ").equals(\"JButton\"))");
        lines.add("{");
        lines.add(writer + ".write(\"\\t\\tScreen.\" + " + objNames + ".get(" + i + ").get(" + j + ") + \".addActionListener(new ActionListener()\\n\" +");
        lines.add("\"\\t\\t{\\n\" +");
        lines.add("\"\\t\\t\\t@Override\\n\" +");
        lines.add("\"\\t\\t\\tpublic void actionPerformed(ActionEvent actionEvent)\\n\" +");
        lines.add("\"\\t\\t\\t{\\n\\n\\n\" +");
        lines.add("\"\\t\\t\\t}\\n\" +");
        lines.add("\"\\t\\t});\\n\\n\");");
        lines.add("}");
        lines.add("}");
        lines.add(writer + ".write(\"\\t}\\n\\n\");");
        lines.add("}");
        lines.add(writer + ".write(\"}\");");
        lines.add(writer + ".close();");
        lines.add("}");
        lines.add("catch (IOException " + e + "){" + e + ".printStackTrace();}");

        for (String l: lines) result.converted.add(l);
    }

}
